
#include <stdio.h>
#include <string.h>
#include<stdlib.h>
int MAXSIZE = 2000;       
int stack[2000];     
int top = -1;            

int isempty() {

   if(top == -1)
      return 1;
   else
      return 0;
}
   
int isfull() {

   if(top == MAXSIZE)
      return 1;
   else
      return 0;
}

int peek() {
   return stack[top];
}

int pop() {
   int data;
	
   if(!isempty()) {
      data = stack[top];
      top = top - 1;   
      return data;
   } else {
      printf("Could not retrieve data, Stack is empty.\n");
   }
}

int push(int data) {

   if(!isfull()) {
      top = top + 1;   
      stack[top] = data;
   } else {
      printf("Could not insert data, Stack is full.\n");
   }
}


int main()
{
    
    char str[100] = "4 5 6 - 7 +";
    char splitStrings[10][10];
     int i, j, cnt;
    j = 0;
    cnt = 0;
    for (i = 0; i <= (strlen(str)); i++) {
        // if space or NULL found, assign NULL into splitStrings[cnt]
        if (str[i] == ' ' || str[i] == '\0') {
            splitStrings[cnt][j] = '\0';
            cnt++; //for next word
            j = 0; //for next word, init index to 0
        }
        else {
            splitStrings[cnt][j] = str[i];
            j++;
        }
    }
    printf("\nOriginal String is: %s", str);
    printf("\nStrings (words) after split by space:\n");
    int op=0;
    for (i = 0; i < cnt; i++)
    {
       op=0;
        if(strcmp(splitStrings[i], "DUP")==0)
        {
            op=1;
        }
        if(strcmp(splitStrings[i], "-")==0)
        {
            op=2;
        }
        if(strcmp(splitStrings[i], "POP")==0)
        {
            op=3;
        }
        if(strcmp(splitStrings[i], "+")==0)
        {
            op=4;
        }
        if(op==1 || op==2 || op==3 ||op==4)
        {
            if(op==1)
            {
                if(isempty()==1)
                {
                    return -1;
                }
                else
                {
                    int x = peek();
                    push(x);
                }
                
            }
            if(op==2)
            {
                if(top>=1)
                {
                    int a= pop();
                    int b= pop();
                    if((a-b)>=0)
                    {
                        push(a-b);
                    }
                    else
                    {
                        return -1;
                    }
                }
                else
                {
                    return -1;
                }
            }
            if(op==3)
            {
                if(isempty()==1)
                {
                    return -1;
                }
                else
                {
                    pop();
                }
            }
            if(op==4)
            {
                if(top>=1)
                {
                    int a=pop();
                    int b=pop();
                    if((a+b)<=1048575)
                    {
                        push(a+b);
                    }
                    else
                    {
                        return -1;
                    }
                }
                else
                {
                    return -1;
                }
            }
        }
        else
        {
            int value;
            value = atoi(splitStrings[i]);
            printf(" 12344 %s %d \n", splitStrings[i], cnt);
          if(value<=1048575)
                    {
                        push(value);
                    }
                    else
                    {
                        return -1;
                    }
        }
    }
        printf(" 12344 %d\n", peek());
        
        
            
   
    return 0;
}
